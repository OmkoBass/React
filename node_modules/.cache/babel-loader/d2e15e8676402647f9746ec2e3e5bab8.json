{"ast":null,"code":"import _slicedToArray from \"/home/omer/Code/reactpractice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/omer/Code/reactpractice/src/App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuidv4 from 'uuid/v4';\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (storedTodos) setTodos(storedTodos);\n    setTodos();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(TodoList, {\n    todos: todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleAddTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add Todo\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Clear Complete\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"0 left to do\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/omer/Code/reactpractice/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","uuidv4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","storedTodos","localStorage","getItem","setItem","JSON","stringify","handleAddTodo","e","name","current","value","prevTodos","id","complete"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaN,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,QACNO,KADM;AAAA,QACCC,QADD;;AAEb,QAAMC,WAAW,GAAGR,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBP,iBAArB,CAApB;AACA,QAAGK,WAAH,EACEF,QAAQ,CAACE,WAAD,CAAR;AACFF,IAAAA,QAAQ;AACT,GALQ,EAKN,EALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACE,OAAb,CAAqBR,iBAArB,EAAwCS,IAAI,CAACC,SAAL,CACrCR,KADqC,CAAxC;AAED,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAKA,WAASS,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGT,WAAW,CAACU,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACjBV,IAAAA,QAAQ,CAACa,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAAEC,QAAAA,EAAE,EAAElB,MAAM,EAAZ;AAAgBc,QAAAA,IAAI,EAAEA,IAAtB;AACtBK,QAAAA,QAAQ,EAAE;AADY,OAAf,CAAP;AAED,KAHO,CAAR;AAIAd,IAAAA,WAAW,CAACU,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,SACE,0CACA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAIb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAO,IAAA,GAAG,EAAEE,WAAZ;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAQ,IAAA,OAAO,EAAEO,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,CADF;AASD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport uuidv4 from 'uuid/v4'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if(storedTodos)\n      setTodos(storedTodos)\n    setTodos()\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify\n      (todos))\n  }, [todos])\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name,\n      complete: false}]\n    })\n    todoNameRef.current.value = null;\n  }\n\n  return (\n    <>\n    <TodoList todos = {todos}/>\n    <input ref={todoNameRef} type=\"text\"/>\n    <button onClick={handleAddTodo}>Add Todo</button>\n    <button>Clear Complete</button>\n    <div>0 left to do</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}